# Start with the official Nginx image
FROM nginx:1.26.3

# Copy your custom nginx.conf into the container
COPY nginx.conf /etc/nginx/nginx.conf

# Copy any additional files (like static content or certificates) if needed
# Example: COPY ./static /usr/share/nginx/html



# Install dependencies for downloading and extracting files
RUN apt-get update && apt-get install -y wget tar && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y \
    build-essential \
    libpcre3 libpcre3-dev \
    libssl-dev \
    zlib1g-dev \
    libxml2 libxml2-dev \
    libyajl-dev \
    git \
    libtool \
    automake \
    pkg-config \
    && apt-get clean
    
# Modsecurity install 
WORKDIR /tmp

RUN git clone --branch v3/master https://github.com/owasp-modsecurity/ModSecurity.git /opt/ModSecurity \
    && cd /opt/ModSecurity \
    && git submodule init \
    && git submodule update \
    && ./build.sh \
    && ./configure \
    && make \
    && make install

# Modsecurity nginx connector
RUN git clone --branch v1.0.3 https://github.com/owasp-modsecurity/ModSecurity-nginx /opt/ModSecurity-nginx \
    && cd /opt/ModSecurity-nginx

RUN wget https://nginx.org/download/nginx-1.26.3.tar.gz -O /tmp/nginx-1.26.3.tar.gz \
    && tar -zxvf /tmp/nginx-1.26.3.tar.gz \
    && cd /tmp/nginx-1.26.3 \
    && ./configure --with-compat --add-dynamic-module=/opt/ModSecurity-nginx \
    && make modules \
    && cp objs/ngx_http_modsecurity_module.so /etc/nginx/modules


# Download and extract the OWASP CRS
RUN wget https://github.com/coreruleset/coreruleset/archive/refs/tags/v3.2.0.tar.gz -O /tmp/coreruleset.tar.gz \
    && mkdir -p /etc/nginx/modsecurity \
    && tar -xzf /tmp/coreruleset.tar.gz -C /etc/nginx/modsecurity --strip-components=1 \
    && rm /tmp/coreruleset.tar.gz \
    && mv /etc/nginx/modsecurity/crs-setup.conf.example /etc/nginx/modsecurity/crs-setup.conf


# Create the modsec_includes.conf file and add the content
RUN echo "include modsecurity/crs-setup.conf\n\
include modsecurity/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf\n\
include modsecurity/rules/REQUEST-901-INITIALIZATION.conf\n\
include modsecurity/rules/REQUEST-903.9001-DRUPAL-EXCLUSION-RULES.conf\n\
include modsecurity/rules/REQUEST-903.9002-WORDPRESS-EXCLUSION-RULES.conf\n\
include modsecurity/rules/REQUEST-903.9003-NEXTCLOUD-EXCLUSION-RULES.conf\n\
include modsecurity/rules/REQUEST-903.9004-DOKUWIKI-EXCLUSION-RULES.conf\n\
include modsecurity/rules/REQUEST-903.9005-CPANEL-EXCLUSION-RULES.conf\n\
include modsecurity/rules/REQUEST-903.9006-XENFORO-EXCLUSION-RULES.conf\n\
include modsecurity/rules/REQUEST-905-COMMON-EXCEPTIONS.conf\n\
include modsecurity/rules/REQUEST-910-IP-REPUTATION.conf\n\
include modsecurity/rules/REQUEST-911-METHOD-ENFORCEMENT.conf\n\
include modsecurity/rules/REQUEST-912-DOS-PROTECTION.conf\n\
include modsecurity/rules/REQUEST-913-SCANNER-DETECTION.conf\n\
include modsecurity/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf\n\
include modsecurity/rules/REQUEST-921-PROTOCOL-ATTACK.conf\n\
include modsecurity/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf\n\
include modsecurity/rules/REQUEST-931-APPLICATION-ATTACK-RFI.conf\n\
include modsecurity/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf\n\
include modsecurity/rules/REQUEST-933-APPLICATION-ATTACK-PHP.conf\n\
include modsecurity/rules/REQUEST-934-APPLICATION-ATTACK-NODEJS.conf\n\
include modsecurity/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf\n\
include modsecurity/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf\n\
include modsecurity/rules/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf\n\
include modsecurity/rules/REQUEST-944-APPLICATION-ATTACK-JAVA.conf\n\
include modsecurity/rules/REQUEST-949-BLOCKING-EVALUATION.conf\n\
include modsecurity/rules/RESPONSE-950-DATA-LEAKAGES.conf\n\
include modsecurity/rules/RESPONSE-951-DATA-LEAKAGES-SQL.conf\n\
include modsecurity/rules/RESPONSE-952-DATA-LEAKAGES-JAVA.conf\n\
include modsecurity/rules/RESPONSE-953-DATA-LEAKAGES-PHP.conf\n\
include modsecurity/rules/RESPONSE-954-DATA-LEAKAGES-IIS.conf\n\
include modsecurity/rules/RESPONSE-959-BLOCKING-EVALUATION.conf\n\
include modsecurity/rules/RESPONSE-980-CORRELATION.conf\n\
include modsecurity/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf" > /etc/nginx/modsec_includes.conf \
    && chmod -R 755 /etc/nginx/modsec_includes.conf


# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]


